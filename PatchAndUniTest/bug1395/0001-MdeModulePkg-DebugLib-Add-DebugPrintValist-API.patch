From 05a01dcd65917618532ae0744210f6648ce84dd8 Mon Sep 17 00:00:00 2001
From: jiansonx <jiansongx.xu@intel.com>
Date: Mon, 21 Jan 2019 13:11:25 +0800
Subject: [PATCH] MdeModulePkg/DebugLib: Add DebugPrintValist API.

https://bugzilla.tianocore.org/show_bug.cgi?id=1395
Adding a print routine with VaList allows for a better/smaller/more optimized
API when doing Protocol/PPI wrapper of debug lib.

Contributed-under: TianoCore Contribution Agreement 1.1
Signed-off-by: Jiansong Xu <jiansongx.xu@intel.com>
Cc: Gao Liming <liming.gao@intel.com>
---
 .../PeiDxeDebugLibReportStatusCode/DebugLib.c      | 49 +++++++++++++++++-----
 1 file changed, 38 insertions(+), 11 deletions(-)

diff --git a/MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/DebugLib.c b/MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/DebugLib.c
index 6f0f416273..9d42936343 100644
--- a/MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/DebugLib.c
+++ b/MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/DebugLib.c
@@ -16,10 +16,8 @@
 **/
 
 #include <PiPei.h>
-
 #include <Guid/StatusCodeDataTypeId.h>
 #include <Guid/StatusCodeDataTypeDebug.h>
-
 #include <Library/DebugLib.h>
 #include <Library/BaseLib.h>
 #include <Library/BaseMemoryLib.h>
@@ -36,12 +34,9 @@
 
   If Format is NULL, then ASSERT().
 
-  If the length of the message string specificed by Format is larger than the maximum allowable
-  record length, then directly return and not print it.
-
   @param  ErrorLevel  The error level of the debug message.
-  @param  Format      Format string for the debug message to print.
-  @param  ...         Variable argument list whose contents are accessed
+  @param  Format      The format string for the debug message to print.
+  @param  ...         The variable argument list whose contents are accessed
                       based on the format string specified by Format.
 
 **/
@@ -52,11 +47,45 @@ DebugPrint (
   IN  CONST CHAR8  *Format,
   ...
   )
+{
+  VA_LIST         Marker;
+
+  ASSERT(Format != NULL);
+
+  VA_START(Marker, Format);
+  DebugPrintValist(ErrorLevel, Format, Marker);
+  VA_END(Marker);
+
+}
+
+/**
+  Prints a debug message to the debug output device if the specified error level is enabled.
+
+  If any bit in ErrorLevel is also set in DebugPrintErrorLevelLib function
+  GetDebugPrintErrorLevel (), then print the message specified by Format and the
+  associated variable argument list to the debug output device.
+
+  If Format is NULL, then ASSERT().
+
+  If the length of the message string specificed by Format is larger than the maximum allowable
+  record length, then directly return and not print it.
+
+  @param  ErrorLevel    The error level of the debug message.
+  @param  Format        Format string for the debug message to print.
+  @param  VaListMarker  VA_LIST marker for the variable argument list.
+
+**/
+VOID
+EFIAPI
+DebugPrintValist (
+  IN  UINTN        ErrorLevel,
+  IN  CONST CHAR8  *Format,
+  VA_LIST          VaListMarker
+  )
 {
   UINT64          Buffer[(EFI_STATUS_CODE_DATA_MAX_SIZE / sizeof (UINT64)) + 1];
   EFI_DEBUG_INFO  *DebugInfo;
   UINTN           TotalSize;
-  VA_LIST         VaListMarker;
   BASE_LIST       BaseListMarker;
   CHAR8           *FormatString;
   BOOLEAN         Long;
@@ -125,7 +154,7 @@ DebugPrint (
   // of format in DEBUG string, which is followed by the DEBUG format string.
   // Here we will process the variable arguments and pack them in this area.
   //
-  VA_START (VaListMarker, Format);
+
 
   //
   // Use the actual format string.
@@ -215,11 +244,9 @@ DebugPrint (
     // If the converted BASE_LIST is larger than the 12 * sizeof (UINT64) allocated bytes, then return
     //
     if ((CHAR8 *)BaseListMarker > FormatString) {
-      VA_END (VaListMarker);
       return;
     }
   }
-  VA_END (VaListMarker);
 
   //
   // Send the DebugInfo record
-- 
2.16.2.windows.1

