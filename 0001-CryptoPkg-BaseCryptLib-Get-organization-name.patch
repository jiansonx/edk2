From eff908de74ff2f1803deaec7cc96f325c62b2cde Mon Sep 17 00:00:00 2001
From: jiansonx <jiansongx.xu@intel.com>
Date: Thu, 10 Jan 2019 17:46:15 +0800
Subject: [PATCH] CryptoPkg/BaseCryptLib: Get organization name.

BZ: https://bugzilla.tianocore.org/show_bug.cgi?id=1401
Use common function to get common name (existing api) and add new api to get organization name.

Contributed-under: TianoCore Contribution Agreement 1.1
Signed-off-by: Jiansong Xu <jiansongx.xu@intel.com>
Cc: Wang, Jian J <jian.j.wang@intel.com>
---
 CryptoPkg/Library/BaseCryptLib/Pk/CryptX509.c | 117 +++++++++++++++++++++-----
 1 file changed, 96 insertions(+), 21 deletions(-)

diff --git a/CryptoPkg/Library/BaseCryptLib/Pk/CryptX509.c b/CryptoPkg/Library/BaseCryptLib/Pk/CryptX509.c
index 75337ed32b..9ea808d9ab 100644
--- a/CryptoPkg/Library/BaseCryptLib/Pk/CryptX509.c
+++ b/CryptoPkg/Library/BaseCryptLib/Pk/CryptX509.c
@@ -298,10 +298,11 @@ _Exit:
 }
 
 /**
-  Retrieve the common name (CN) string from one X.509 certificate.
+  Retrieve a string from one X.509 certificate.
 
   @param[in]      Cert             Pointer to the DER-encoded X509 certificate.
   @param[in]      CertSize         Size of the X509 certificate in bytes.
+  @param[in]      Request_NID      NID of string to obtain
   @param[out]     CommonName       Buffer to contain the retrieved certificate common
                                    name string (UTF8). At most CommonNameSize bytes will be
                                    written and the string will be null terminated. May be
@@ -316,19 +317,20 @@ _Exit:
                                    If CommonNameSize is NULL.
                                    If CommonName is not NULL and *CommonNameSize is 0.
                                    If Certificate is invalid.
-  @retval RETURN_NOT_FOUND         If no CommonName entry exists.
+  @retval RETURN_NOT_FOUND         If no NID Name entry exists.
   @retval RETURN_BUFFER_TOO_SMALL  If the CommonName is NULL. The required buffer size
                                    (including the final null) is returned in the
                                    CommonNameSize parameter.
   @retval RETURN_UNSUPPORTED       The operation is not supported.
 
 **/
+STATIC
 RETURN_STATUS
-EFIAPI
-X509GetCommonName (
+InternalX509GetNIDName (
   IN      CONST UINT8  *Cert,
   IN      UINTN        CertSize,
-  OUT     CHAR8        *CommonName,  OPTIONAL
+  IN      INTN         Request_NID,
+     OUT  CHAR8       *CommonName,  OPTIONAL
   IN OUT  UINTN        *CommonNameSize
   )
 {
@@ -381,25 +383,21 @@ X509GetCommonName (
   }
 
   //
-  // Retrieve the CommonName information from X.509 Subject
+  // Default to No NID text entry exists in X509_NAME object
   //
-  Index = X509_NAME_get_index_by_NID (X509Name, NID_commonName, -1);
+  *CommonNameSize = 0;
+  ReturnStatus    = RETURN_NOT_FOUND;
+
+  Index = X509_NAME_get_index_by_NID (X509Name, Request_NID, -1);
   if (Index < 0) {
-    //
-    // No CommonName entry exists in X509_NAME object
-    //
-    *CommonNameSize = 0;
-    ReturnStatus    = RETURN_NOT_FOUND;
+
+    DEBUG((DEBUG_ERROR,"NID not found\n"));
     goto _Exit;
   }
 
   Entry = X509_NAME_get_entry (X509Name, Index);
   if (Entry == NULL) {
-    //
-    // Fail to retrieve name entry data
-    //
-    *CommonNameSize = 0;
-    ReturnStatus    = RETURN_NOT_FOUND;
+    DEBUG((DEBUG_ERROR,"Entry %d not found\n", Index));
     goto _Exit;
   }
 
@@ -407,10 +405,7 @@ X509GetCommonName (
 
   Length = ASN1_STRING_to_UTF8 (&UTF8Name, EntryData);
   if (Length < 0) {
-    //
-    // Fail to convert the commonName string
-    //
-    *CommonNameSize = 0;
+    DEBUG((DEBUG_ERROR,"Could not convert test to UEF8\n"));
     ReturnStatus    = RETURN_INVALID_PARAMETER;
     goto _Exit;
   }
@@ -439,6 +434,86 @@ _Exit:
   return ReturnStatus;
 }
 
+
+/**
+  Retrieve the common name (CN) string from one X.509 certificate.
+
+  @param[in]      Cert             Pointer to the DER-encoded X509 certificate.
+  @param[in]      CertSize         Size of the X509 certificate in bytes.
+  @param[out]     CommonName       Buffer to contain the retrieved certificate common
+                                   name string. At most CommonNameSize bytes will be
+                                   written and the string will be null terminated. May be
+                                   NULL in order to determine the size buffer needed.
+  @param[in,out]  CommonNameSize   The size in bytes of the CommonName buffer on input,
+                                   and the size of buffer returned CommonName on output.
+                                   If CommonName is NULL then the amount of space needed
+                                   in buffer (including the final null) is returned.
+
+  @retval RETURN_SUCCESS           The certificate CommonName retrieved successfully.
+  @retval RETURN_INVALID_PARAMETER If Cert is NULL.
+                                   If CommonNameSize is NULL.
+                                   If CommonName is not NULL and *CommonNameSize is 0.
+                                   If Certificate is invalid.
+  @retval RETURN_NOT_FOUND         If no CommonName entry exists.
+  @retval RETURN_BUFFER_TOO_SMALL  If the CommonName is NULL. The required buffer size
+                                   (including the final null) is returned in the
+                                   CommonNameSize parameter.
+  @retval RETURN_UNSUPPORTED       The operation is not supported.
+
+**/
+RETURN_STATUS
+EFIAPI
+X509GetCommonName (
+  IN      CONST UINT8  *Cert,
+  IN      UINTN        CertSize,
+  OUT     CHAR8        *CommonName,  OPTIONAL
+  IN OUT  UINTN        *CommonNameSize
+  )
+{
+
+  return InternalX509GetNIDName (Cert, CertSize, NID_commonName, CommonName, CommonNameSize);
+}
+
+/**
+  Retrieve the organization name (O) string from one X.509 certificate.
+
+  @param[in]      Cert             Pointer to the DER-encoded X509 certificate.
+  @param[in]      CertSize         Size of the X509 certificate in bytes.
+  @param[out]     NameBuffer       Buffer to contain the retrieved certificate organization
+                                   name string. At most NameBufferSize bytes will be
+                                   written and the string will be null terminated. May be
+                                   NULL in order to determine the size buffer needed.
+  @param[in,out]  NameBufferSiz e  The size in bytes of the Name buffer on input,
+                                   and the size of buffer returned Name on output.
+                                   If NameBuffer is NULL then the amount of space needed
+                                   in buffer (including the final null) is returned.
+
+  @retval RETURN_SUCCESS           The certificate Organization Name retrieved successfully.
+  @retval RETURN_INVALID_PARAMETER If Cert is NULL.
+                                   If NameBufferSize is NULL.
+                                   If NameBuffer is not NULL and *CommonNameSize is 0.
+                                   If Certificate is invalid.
+  @retval RETURN_NOT_FOUND         If no Organization Name entry exists.
+  @retval RETURN_BUFFER_TOO_SMALL  If the NameBuffer is NULL. The required buffer size
+                                   (including the final null) is returned in the
+                                   CommonNameSize parameter.
+  @retval RETURN_UNSUPPORTED       The operation is not supported.
+
+**/
+RETURN_STATUS
+EFIAPI
+X509GetOrganizationName (
+  IN      CONST UINT8  *Cert,
+  IN      UINTN        CertSize,
+  OUT     CHAR8        *NameBuffer,  OPTIONAL
+  IN OUT  UINTN        *NameBufferSize
+  )
+{
+
+  return InternalX509GetNIDName (Cert, CertSize, NID_organizationName, NameBuffer, NameBufferSize);
+}
+
+
 /**
   Retrieve the RSA Public Key from one DER-encoded X509 certificate.
 
-- 
2.16.2.windows.1

